// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: oGQcGtbFzYohLFbpGrRxL3
// Component: m0O9QXIre9
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import AuxanoNavbar from "../../AuxanoNavbar"; // plasmic-import: NaO7GDEY89/component
import Footer from "../../Footer"; // plasmic-import: 6NjpMkUH8g-/component
import { useScreenVariants as useScreenVariantsbmXrKiwboivdw } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: bmXrKIWBOIVDW/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_auxano.module.css"; // plasmic-import: oGQcGtbFzYohLFbpGrRxL3/projectcss
import sty from "./PlasmicContact.module.css"; // plasmic-import: m0O9QXIre9/css
import IconOutlinephoneIcon from "./icons/PlasmicIcon__IconOutlinephone"; // plasmic-import: 4byTu4Is8/icon
import IconOutlinedeviceMobileIcon from "./icons/PlasmicIcon__IconOutlinedeviceMobile"; // plasmic-import: ZFatQPHDzg/icon
import IconOutlinemailIcon from "./icons/PlasmicIcon__IconOutlinemail"; // plasmic-import: 6-caiXs_Q5/icon
import IconOutlineinformationCircleIcon from "./icons/PlasmicIcon__IconOutlineinformationCircle"; // plasmic-import: PcFk174NMj/icon
import IconSolidcheveronDownIcon from "./icons/PlasmicIcon__IconSolidcheveronDown"; // plasmic-import: II4CvDQeE0/icon
import Line10Icon from "./icons/PlasmicIcon__Line10"; // plasmic-import: iPsMxTJ0PS/icon
import Line11Icon from "./icons/PlasmicIcon__Line11"; // plasmic-import: lBDlZ1FMhR/icon

export const PlasmicContact__VariantProps = new Array();

export const PlasmicContact__ArgProps = new Array();

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicContact__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsbmXrKiwboivdw()
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <section
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames(projectcss.all, sty.header)}
          >
            <AuxanoNavbar
              data-plasmic-name={"auxanoNavbar"}
              data-plasmic-override={overrides.auxanoNavbar}
              className={classNames("__wab_instance", sty.auxanoNavbar)}
            />

            <div
              data-plasmic-name={"frame26"}
              data-plasmic-override={overrides.frame26}
              className={classNames(projectcss.all, sty.frame26)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"header2"}
                data-plasmic-override={overrides.header2}
                hasGap={true}
                className={classNames(projectcss.all, sty.header2)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"content"}
                  data-plasmic-override={overrides.content}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.content)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame39"}
                    data-plasmic-override={overrides.frame39}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame39)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nQ4Vb
                      )}
                    >
                      {"About us."}
                    </div>
                  </p.Stack>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cDI
                    )}
                  >
                    {
                      "Unlocking Business Potential with \nTailored Solutions and the ABC's of Business Rescue"
                    }
                  </div>
                </p.Stack>
              </p.Stack>
            </div>
          </section>
          <section
            data-plasmic-name={"body"}
            data-plasmic-override={overrides.body}
            className={classNames(projectcss.all, sty.body)}
          >
            <div
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              className={classNames(projectcss.all, sty.columns)}
            >
              <div className={classNames(projectcss.all, sty.column__e1IW)}>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2399"}
                  data-plasmic-override={overrides.frame2399}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2399)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"upper"}
                    data-plasmic-override={overrides.upper}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.upper)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__guUjB
                      )}
                    >
                      {"Get in touch"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vgrrx
                      )}
                    >
                      {
                        "Reach Out to Our Team for Professional Support and Inquiries"
                      }
                    </div>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"phone"}
                      data-plasmic-override={overrides.phone}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.phone)}
                    >
                      <IconOutlinephoneIcon
                        className={classNames(projectcss.all, sty.svg___374Oe)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___07Yfj
                        )}
                      >
                        {"+27 (0)11 568 4212"}
                      </div>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"secondPhone"}
                      data-plasmic-override={overrides.secondPhone}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.secondPhone)}
                    >
                      <IconOutlinedeviceMobileIcon
                        className={classNames(projectcss.all, sty.svg__wpC9G)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0MefW
                        )}
                      >
                        {"+27 (0)72 746 9242"}
                      </div>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"mail"}
                      data-plasmic-override={overrides.mail}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.mail)}
                    >
                      <IconOutlinemailIcon
                        className={classNames(projectcss.all, sty.svg___4KgUa)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___5RXnT
                        )}
                      >
                        {"info@auxano.co.za"}
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </div>
              <div className={classNames(projectcss.all, sty.column__v3HaK)}>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"form"}
                  data-plasmic-override={overrides.form}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.form)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"formRow"}
                    data-plasmic-override={overrides.formRow}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.formRow)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"inputWithLabel"}
                      data-plasmic-override={overrides.inputWithLabel}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.inputWithLabel)}
                    >
                      <div
                        data-plasmic-name={"inputText"}
                        data-plasmic-override={overrides.inputText}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.inputText
                        )}
                      >
                        {"Name"}
                      </div>
                      <div
                        data-plasmic-name={"basicInput"}
                        data-plasmic-override={overrides.basicInput}
                        className={classNames(projectcss.all, sty.basicInput)}
                      >
                        <div
                          data-plasmic-name={"inputText2"}
                          data-plasmic-override={overrides.inputText2}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.inputText2
                          )}
                        >
                          {"Placeholder"}
                        </div>
                      </div>
                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__v31C
                          )}
                        >
                          {"Validation text"}
                        </div>
                      ) : null}
                      {false ? (
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame2398"}
                          data-plasmic-override={overrides.frame2398}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.frame2398)}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"passwordStrengthBar"}
                            data-plasmic-override={
                              overrides.passwordStrengthBar
                            }
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.passwordStrengthBar
                            )}
                          >
                            <div
                              data-plasmic-name={"rectangle140"}
                              data-plasmic-override={overrides.rectangle140}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle140
                              )}
                            />

                            <div
                              data-plasmic-name={"rectangle141"}
                              data-plasmic-override={overrides.rectangle141}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle141
                              )}
                            />

                            <div
                              data-plasmic-name={"rectangle142"}
                              data-plasmic-override={overrides.rectangle142}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle142
                              )}
                            />

                            <div
                              data-plasmic-name={"rectangle143"}
                              data-plasmic-override={overrides.rectangle143}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle143
                              )}
                            />
                          </p.Stack>
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"frame2397"}
                            data-plasmic-override={overrides.frame2397}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame2397
                            )}
                          >
                            <div
                              data-plasmic-name={"inputText3"}
                              data-plasmic-override={overrides.inputText3}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.inputText3
                              )}
                            >
                              {"Weak"}
                            </div>
                            <IconOutlineinformationCircleIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__hilBd
                              )}
                              role={"img"}
                            />
                          </p.Stack>
                        </p.Stack>
                      ) : null}
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"inputWithLabel2"}
                      data-plasmic-override={overrides.inputWithLabel2}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.inputWithLabel2
                      )}
                    >
                      <div
                        data-plasmic-name={"inputText4"}
                        data-plasmic-override={overrides.inputText4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.inputText4
                        )}
                      >
                        {"Email"}
                      </div>
                      <div
                        data-plasmic-name={"basicInput2"}
                        data-plasmic-override={overrides.basicInput2}
                        className={classNames(projectcss.all, sty.basicInput2)}
                      >
                        <div
                          data-plasmic-name={"inputText5"}
                          data-plasmic-override={overrides.inputText5}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.inputText5
                          )}
                        >
                          {"Placeholder"}
                        </div>
                      </div>
                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__iFokc
                          )}
                        >
                          {"Validation text"}
                        </div>
                      ) : null}
                      {false ? (
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame2400"}
                          data-plasmic-override={overrides.frame2400}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.frame2400)}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"passwordStrengthBar2"}
                            data-plasmic-override={
                              overrides.passwordStrengthBar2
                            }
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.passwordStrengthBar2
                            )}
                          >
                            <div
                              data-plasmic-name={"rectangle144"}
                              data-plasmic-override={overrides.rectangle144}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle144
                              )}
                            />

                            <div
                              data-plasmic-name={"rectangle145"}
                              data-plasmic-override={overrides.rectangle145}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle145
                              )}
                            />

                            <div
                              data-plasmic-name={"rectangle146"}
                              data-plasmic-override={overrides.rectangle146}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle146
                              )}
                            />

                            <div
                              data-plasmic-name={"rectangle147"}
                              data-plasmic-override={overrides.rectangle147}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle147
                              )}
                            />
                          </p.Stack>
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"frame2401"}
                            data-plasmic-override={overrides.frame2401}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.frame2401
                            )}
                          >
                            <div
                              data-plasmic-name={"inputText6"}
                              data-plasmic-override={overrides.inputText6}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.inputText6
                              )}
                            >
                              {"Weak"}
                            </div>
                            <IconOutlineinformationCircleIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__mfXHt
                              )}
                              role={"img"}
                            />
                          </p.Stack>
                        </p.Stack>
                      ) : null}
                    </p.Stack>
                  </p.Stack>
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"inputWithLabel3"}
                    data-plasmic-override={overrides.inputWithLabel3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.inputWithLabel3)}
                  >
                    <div
                      data-plasmic-name={"inputText7"}
                      data-plasmic-override={overrides.inputText7}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.inputText7
                      )}
                    >
                      {"How can we help you?"}
                    </div>
                    <div
                      data-plasmic-name={"dropdown"}
                      data-plasmic-override={overrides.dropdown}
                      className={classNames(projectcss.all, sty.dropdown)}
                    >
                      <div
                        data-plasmic-name={"inputText8"}
                        data-plasmic-override={overrides.inputText8}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.inputText8
                        )}
                      >
                        {"Choose value"}
                      </div>
                      <IconSolidcheveronDownIcon
                        className={classNames(projectcss.all, sty.svg__a6BtL)}
                        role={"img"}
                      />
                    </div>
                    {false ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vTeoX
                        )}
                      >
                        {"Validation text"}
                      </div>
                    ) : null}
                    {false ? (
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2402"}
                        data-plasmic-override={overrides.frame2402}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2402)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"passwordStrengthBar3"}
                          data-plasmic-override={overrides.passwordStrengthBar3}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.passwordStrengthBar3
                          )}
                        >
                          <div
                            data-plasmic-name={"rectangle148"}
                            data-plasmic-override={overrides.rectangle148}
                            className={classNames(
                              projectcss.all,
                              sty.rectangle148
                            )}
                          />

                          <div
                            data-plasmic-name={"rectangle149"}
                            data-plasmic-override={overrides.rectangle149}
                            className={classNames(
                              projectcss.all,
                              sty.rectangle149
                            )}
                          />

                          <div
                            data-plasmic-name={"rectangle150"}
                            data-plasmic-override={overrides.rectangle150}
                            className={classNames(
                              projectcss.all,
                              sty.rectangle150
                            )}
                          />

                          <div
                            data-plasmic-name={"rectangle151"}
                            data-plasmic-override={overrides.rectangle151}
                            className={classNames(
                              projectcss.all,
                              sty.rectangle151
                            )}
                          />
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame2403"}
                          data-plasmic-override={overrides.frame2403}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.frame2403)}
                        >
                          <div
                            data-plasmic-name={"inputText9"}
                            data-plasmic-override={overrides.inputText9}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.inputText9
                            )}
                          >
                            {"Weak"}
                          </div>
                          <IconOutlineinformationCircleIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___6Tp1
                            )}
                            role={"img"}
                          />
                        </p.Stack>
                      </p.Stack>
                    ) : null}
                  </p.Stack>
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"inputWithLabel4"}
                    data-plasmic-override={overrides.inputWithLabel4}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.inputWithLabel4)}
                  >
                    <div
                      data-plasmic-name={"inputText10"}
                      data-plasmic-override={overrides.inputText10}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.inputText10
                      )}
                    >
                      {"Any details"}
                    </div>
                    <div
                      data-plasmic-name={"textareaInput"}
                      data-plasmic-override={overrides.textareaInput}
                      className={classNames(projectcss.all, sty.textareaInput)}
                    >
                      <div
                        data-plasmic-name={"inputText11"}
                        data-plasmic-override={overrides.inputText11}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.inputText11
                        )}
                      >
                        {"Placeholder"}
                      </div>
                      <Line10Icon
                        className={classNames(projectcss.all, sty.svg__yvXe)}
                        role={"img"}
                      />

                      <Line11Icon
                        className={classNames(projectcss.all, sty.svg__ospiB)}
                        role={"img"}
                      />
                    </div>
                    {false ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cnqUw
                        )}
                      >
                        {"Validation text"}
                      </div>
                    ) : null}
                    {false ? (
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2404"}
                        data-plasmic-override={overrides.frame2404}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2404)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"passwordStrengthBar4"}
                          data-plasmic-override={overrides.passwordStrengthBar4}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.passwordStrengthBar4
                          )}
                        >
                          <div
                            data-plasmic-name={"rectangle152"}
                            data-plasmic-override={overrides.rectangle152}
                            className={classNames(
                              projectcss.all,
                              sty.rectangle152
                            )}
                          />

                          <div
                            data-plasmic-name={"rectangle153"}
                            data-plasmic-override={overrides.rectangle153}
                            className={classNames(
                              projectcss.all,
                              sty.rectangle153
                            )}
                          />

                          <div
                            data-plasmic-name={"rectangle154"}
                            data-plasmic-override={overrides.rectangle154}
                            className={classNames(
                              projectcss.all,
                              sty.rectangle154
                            )}
                          />

                          <div
                            data-plasmic-name={"rectangle155"}
                            data-plasmic-override={overrides.rectangle155}
                            className={classNames(
                              projectcss.all,
                              sty.rectangle155
                            )}
                          />
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame2405"}
                          data-plasmic-override={overrides.frame2405}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.frame2405)}
                        >
                          <div
                            data-plasmic-name={"inputText12"}
                            data-plasmic-override={overrides.inputText12}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.inputText12
                            )}
                          >
                            {"Weak"}
                          </div>
                          <IconOutlineinformationCircleIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__e6DXg
                            )}
                            role={"img"}
                          />
                        </p.Stack>
                      </p.Stack>
                    ) : null}
                  </p.Stack>
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame2406"}
                    data-plasmic-override={overrides.frame2406}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame2406)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"button"}
                      data-plasmic-override={overrides.button}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.button)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ztvY4
                        )}
                      >
                        {"Send"}
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </div>
            </div>
            <p.Stack
              as={"div"}
              data-plasmic-name={"section"}
              data-plasmic-override={overrides.section}
              hasGap={true}
              className={classNames(projectcss.all, sty.section)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"upper2"}
                data-plasmic-override={overrides.upper2}
                hasGap={true}
                className={classNames(projectcss.all, sty.upper2)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bz8NH
                  )}
                >
                  {"Our Offices"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___09SYs
                  )}
                >
                  {
                    "Our goal and vision remain steadfast in that we consistently strive to be the leading\ncompetitively business consultancy in South Africa"
                  }
                </div>
              </p.Stack>
              <p.Stack
                as={"div"}
                data-plasmic-name={"addresses"}
                data-plasmic-override={overrides.addresses}
                hasGap={true}
                className={classNames(projectcss.all, sty.addresses)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"nelspruit"}
                  data-plasmic-override={overrides.nelspruit}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.nelspruit)}
                >
                  <div
                    data-plasmic-name={"nelspruit2"}
                    data-plasmic-override={overrides.nelspruit2}
                    className={classNames(projectcss.all, sty.nelspruit2)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__g3BYs
                      )}
                    >
                      {"Nelspruit"}
                    </div>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hmGsb
                    )}
                  >
                    {
                      "7 Oak, Yardley Village\nDr. Enos Mabusa Drive West Acres\nNelspruit 1211"
                    }
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"headoffice"}
                  data-plasmic-override={overrides.headoffice}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.headoffice)}
                >
                  <div
                    data-plasmic-name={"headOfficeJhb"}
                    data-plasmic-override={overrides.headOfficeJhb}
                    className={classNames(projectcss.all, sty.headOfficeJhb)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__deJRd
                      )}
                    >
                      {"Head office (JHB)"}
                    </div>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sb6Tx
                    )}
                  >
                    {
                      "165 West Street\nCnr west & Freedman drive Sandown\nSandton City 2196"
                    }
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"polokwane"}
                  data-plasmic-override={overrides.polokwane}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.polokwane)}
                >
                  <div
                    data-plasmic-name={"polokwane2"}
                    data-plasmic-override={overrides.polokwane2}
                    className={classNames(projectcss.all, sty.polokwane2)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6Io5U
                      )}
                    >
                      {"Polokwane"}
                    </div>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__s9NYp
                    )}
                  >
                    {"3 Gar Street\nEmdo Polokwane\n0699"}
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"pta"}
                  data-plasmic-override={overrides.pta}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.pta)}
                >
                  <div
                    data-plasmic-name={"pretoria"}
                    data-plasmic-override={overrides.pretoria}
                    className={classNames(projectcss.all, sty.pretoria)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kBdCm
                      )}
                    >
                      {"Pretoria"}
                    </div>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bMrpy
                    )}
                  >
                    {"449 Neser Street\nGarsfontein Pretoria\n0042"}
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </section>
          <section className={classNames(projectcss.all, sty.section__geRga)}>
            <Footer className={classNames("__wab_instance", sty.footer__nE2)} />
          </section>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "auxanoNavbar",
    "frame26",
    "header2",
    "content",
    "frame39",
    "body",
    "columns",
    "frame2399",
    "upper",
    "phone",
    "secondPhone",
    "mail",
    "form",
    "formRow",
    "inputWithLabel",
    "inputText",
    "basicInput",
    "inputText2",
    "frame2398",
    "passwordStrengthBar",
    "rectangle140",
    "rectangle141",
    "rectangle142",
    "rectangle143",
    "frame2397",
    "inputText3",
    "inputWithLabel2",
    "inputText4",
    "basicInput2",
    "inputText5",
    "frame2400",
    "passwordStrengthBar2",
    "rectangle144",
    "rectangle145",
    "rectangle146",
    "rectangle147",
    "frame2401",
    "inputText6",
    "inputWithLabel3",
    "inputText7",
    "dropdown",
    "inputText8",
    "frame2402",
    "passwordStrengthBar3",
    "rectangle148",
    "rectangle149",
    "rectangle150",
    "rectangle151",
    "frame2403",
    "inputText9",
    "inputWithLabel4",
    "inputText10",
    "textareaInput",
    "inputText11",
    "frame2404",
    "passwordStrengthBar4",
    "rectangle152",
    "rectangle153",
    "rectangle154",
    "rectangle155",
    "frame2405",
    "inputText12",
    "frame2406",
    "button",
    "section",
    "upper2",
    "addresses",
    "nelspruit",
    "nelspruit2",
    "headoffice",
    "headOfficeJhb",
    "polokwane",
    "polokwane2",
    "pta",
    "pretoria"
  ],

  header: [
    "header",
    "auxanoNavbar",
    "frame26",
    "header2",
    "content",
    "frame39"
  ],

  auxanoNavbar: ["auxanoNavbar"],
  frame26: ["frame26", "header2", "content", "frame39"],
  header2: ["header2", "content", "frame39"],
  content: ["content", "frame39"],
  frame39: ["frame39"],
  body: [
    "body",
    "columns",
    "frame2399",
    "upper",
    "phone",
    "secondPhone",
    "mail",
    "form",
    "formRow",
    "inputWithLabel",
    "inputText",
    "basicInput",
    "inputText2",
    "frame2398",
    "passwordStrengthBar",
    "rectangle140",
    "rectangle141",
    "rectangle142",
    "rectangle143",
    "frame2397",
    "inputText3",
    "inputWithLabel2",
    "inputText4",
    "basicInput2",
    "inputText5",
    "frame2400",
    "passwordStrengthBar2",
    "rectangle144",
    "rectangle145",
    "rectangle146",
    "rectangle147",
    "frame2401",
    "inputText6",
    "inputWithLabel3",
    "inputText7",
    "dropdown",
    "inputText8",
    "frame2402",
    "passwordStrengthBar3",
    "rectangle148",
    "rectangle149",
    "rectangle150",
    "rectangle151",
    "frame2403",
    "inputText9",
    "inputWithLabel4",
    "inputText10",
    "textareaInput",
    "inputText11",
    "frame2404",
    "passwordStrengthBar4",
    "rectangle152",
    "rectangle153",
    "rectangle154",
    "rectangle155",
    "frame2405",
    "inputText12",
    "frame2406",
    "button",
    "section",
    "upper2",
    "addresses",
    "nelspruit",
    "nelspruit2",
    "headoffice",
    "headOfficeJhb",
    "polokwane",
    "polokwane2",
    "pta",
    "pretoria"
  ],

  columns: [
    "columns",
    "frame2399",
    "upper",
    "phone",
    "secondPhone",
    "mail",
    "form",
    "formRow",
    "inputWithLabel",
    "inputText",
    "basicInput",
    "inputText2",
    "frame2398",
    "passwordStrengthBar",
    "rectangle140",
    "rectangle141",
    "rectangle142",
    "rectangle143",
    "frame2397",
    "inputText3",
    "inputWithLabel2",
    "inputText4",
    "basicInput2",
    "inputText5",
    "frame2400",
    "passwordStrengthBar2",
    "rectangle144",
    "rectangle145",
    "rectangle146",
    "rectangle147",
    "frame2401",
    "inputText6",
    "inputWithLabel3",
    "inputText7",
    "dropdown",
    "inputText8",
    "frame2402",
    "passwordStrengthBar3",
    "rectangle148",
    "rectangle149",
    "rectangle150",
    "rectangle151",
    "frame2403",
    "inputText9",
    "inputWithLabel4",
    "inputText10",
    "textareaInput",
    "inputText11",
    "frame2404",
    "passwordStrengthBar4",
    "rectangle152",
    "rectangle153",
    "rectangle154",
    "rectangle155",
    "frame2405",
    "inputText12",
    "frame2406",
    "button"
  ],

  frame2399: ["frame2399", "upper", "phone", "secondPhone", "mail"],
  upper: ["upper", "phone", "secondPhone", "mail"],
  phone: ["phone"],
  secondPhone: ["secondPhone"],
  mail: ["mail"],
  form: [
    "form",
    "formRow",
    "inputWithLabel",
    "inputText",
    "basicInput",
    "inputText2",
    "frame2398",
    "passwordStrengthBar",
    "rectangle140",
    "rectangle141",
    "rectangle142",
    "rectangle143",
    "frame2397",
    "inputText3",
    "inputWithLabel2",
    "inputText4",
    "basicInput2",
    "inputText5",
    "frame2400",
    "passwordStrengthBar2",
    "rectangle144",
    "rectangle145",
    "rectangle146",
    "rectangle147",
    "frame2401",
    "inputText6",
    "inputWithLabel3",
    "inputText7",
    "dropdown",
    "inputText8",
    "frame2402",
    "passwordStrengthBar3",
    "rectangle148",
    "rectangle149",
    "rectangle150",
    "rectangle151",
    "frame2403",
    "inputText9",
    "inputWithLabel4",
    "inputText10",
    "textareaInput",
    "inputText11",
    "frame2404",
    "passwordStrengthBar4",
    "rectangle152",
    "rectangle153",
    "rectangle154",
    "rectangle155",
    "frame2405",
    "inputText12",
    "frame2406",
    "button"
  ],

  formRow: [
    "formRow",
    "inputWithLabel",
    "inputText",
    "basicInput",
    "inputText2",
    "frame2398",
    "passwordStrengthBar",
    "rectangle140",
    "rectangle141",
    "rectangle142",
    "rectangle143",
    "frame2397",
    "inputText3",
    "inputWithLabel2",
    "inputText4",
    "basicInput2",
    "inputText5",
    "frame2400",
    "passwordStrengthBar2",
    "rectangle144",
    "rectangle145",
    "rectangle146",
    "rectangle147",
    "frame2401",
    "inputText6"
  ],

  inputWithLabel: [
    "inputWithLabel",
    "inputText",
    "basicInput",
    "inputText2",
    "frame2398",
    "passwordStrengthBar",
    "rectangle140",
    "rectangle141",
    "rectangle142",
    "rectangle143",
    "frame2397",
    "inputText3"
  ],

  inputText: ["inputText"],
  basicInput: ["basicInput", "inputText2"],
  inputText2: ["inputText2"],
  frame2398: [
    "frame2398",
    "passwordStrengthBar",
    "rectangle140",
    "rectangle141",
    "rectangle142",
    "rectangle143",
    "frame2397",
    "inputText3"
  ],

  passwordStrengthBar: [
    "passwordStrengthBar",
    "rectangle140",
    "rectangle141",
    "rectangle142",
    "rectangle143"
  ],

  rectangle140: ["rectangle140"],
  rectangle141: ["rectangle141"],
  rectangle142: ["rectangle142"],
  rectangle143: ["rectangle143"],
  frame2397: ["frame2397", "inputText3"],
  inputText3: ["inputText3"],
  inputWithLabel2: [
    "inputWithLabel2",
    "inputText4",
    "basicInput2",
    "inputText5",
    "frame2400",
    "passwordStrengthBar2",
    "rectangle144",
    "rectangle145",
    "rectangle146",
    "rectangle147",
    "frame2401",
    "inputText6"
  ],

  inputText4: ["inputText4"],
  basicInput2: ["basicInput2", "inputText5"],
  inputText5: ["inputText5"],
  frame2400: [
    "frame2400",
    "passwordStrengthBar2",
    "rectangle144",
    "rectangle145",
    "rectangle146",
    "rectangle147",
    "frame2401",
    "inputText6"
  ],

  passwordStrengthBar2: [
    "passwordStrengthBar2",
    "rectangle144",
    "rectangle145",
    "rectangle146",
    "rectangle147"
  ],

  rectangle144: ["rectangle144"],
  rectangle145: ["rectangle145"],
  rectangle146: ["rectangle146"],
  rectangle147: ["rectangle147"],
  frame2401: ["frame2401", "inputText6"],
  inputText6: ["inputText6"],
  inputWithLabel3: [
    "inputWithLabel3",
    "inputText7",
    "dropdown",
    "inputText8",
    "frame2402",
    "passwordStrengthBar3",
    "rectangle148",
    "rectangle149",
    "rectangle150",
    "rectangle151",
    "frame2403",
    "inputText9"
  ],

  inputText7: ["inputText7"],
  dropdown: ["dropdown", "inputText8"],
  inputText8: ["inputText8"],
  frame2402: [
    "frame2402",
    "passwordStrengthBar3",
    "rectangle148",
    "rectangle149",
    "rectangle150",
    "rectangle151",
    "frame2403",
    "inputText9"
  ],

  passwordStrengthBar3: [
    "passwordStrengthBar3",
    "rectangle148",
    "rectangle149",
    "rectangle150",
    "rectangle151"
  ],

  rectangle148: ["rectangle148"],
  rectangle149: ["rectangle149"],
  rectangle150: ["rectangle150"],
  rectangle151: ["rectangle151"],
  frame2403: ["frame2403", "inputText9"],
  inputText9: ["inputText9"],
  inputWithLabel4: [
    "inputWithLabel4",
    "inputText10",
    "textareaInput",
    "inputText11",
    "frame2404",
    "passwordStrengthBar4",
    "rectangle152",
    "rectangle153",
    "rectangle154",
    "rectangle155",
    "frame2405",
    "inputText12"
  ],

  inputText10: ["inputText10"],
  textareaInput: ["textareaInput", "inputText11"],
  inputText11: ["inputText11"],
  frame2404: [
    "frame2404",
    "passwordStrengthBar4",
    "rectangle152",
    "rectangle153",
    "rectangle154",
    "rectangle155",
    "frame2405",
    "inputText12"
  ],

  passwordStrengthBar4: [
    "passwordStrengthBar4",
    "rectangle152",
    "rectangle153",
    "rectangle154",
    "rectangle155"
  ],

  rectangle152: ["rectangle152"],
  rectangle153: ["rectangle153"],
  rectangle154: ["rectangle154"],
  rectangle155: ["rectangle155"],
  frame2405: ["frame2405", "inputText12"],
  inputText12: ["inputText12"],
  frame2406: ["frame2406", "button"],
  button: ["button"],
  section: [
    "section",
    "upper2",
    "addresses",
    "nelspruit",
    "nelspruit2",
    "headoffice",
    "headOfficeJhb",
    "polokwane",
    "polokwane2",
    "pta",
    "pretoria"
  ],

  upper2: ["upper2"],
  addresses: [
    "addresses",
    "nelspruit",
    "nelspruit2",
    "headoffice",
    "headOfficeJhb",
    "polokwane",
    "polokwane2",
    "pta",
    "pretoria"
  ],

  nelspruit: ["nelspruit", "nelspruit2"],
  nelspruit2: ["nelspruit2"],
  headoffice: ["headoffice", "headOfficeJhb"],
  headOfficeJhb: ["headOfficeJhb"],
  polokwane: ["polokwane", "polokwane2"],
  polokwane2: ["polokwane2"],
  pta: ["pta", "pretoria"],
  pretoria: ["pretoria"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicContact__ArgProps,
          internalVariantPropNames: PlasmicContact__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicContact__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicContact";
  } else {
    func.displayName = `PlasmicContact.${nodeName}`;
  }
  return func;
}

export const PlasmicContact = Object.assign(
  // Top-level PlasmicContact renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    auxanoNavbar: makeNodeComponent("auxanoNavbar"),
    frame26: makeNodeComponent("frame26"),
    header2: makeNodeComponent("header2"),
    content: makeNodeComponent("content"),
    frame39: makeNodeComponent("frame39"),
    body: makeNodeComponent("body"),
    columns: makeNodeComponent("columns"),
    frame2399: makeNodeComponent("frame2399"),
    upper: makeNodeComponent("upper"),
    phone: makeNodeComponent("phone"),
    secondPhone: makeNodeComponent("secondPhone"),
    mail: makeNodeComponent("mail"),
    form: makeNodeComponent("form"),
    formRow: makeNodeComponent("formRow"),
    inputWithLabel: makeNodeComponent("inputWithLabel"),
    inputText: makeNodeComponent("inputText"),
    basicInput: makeNodeComponent("basicInput"),
    inputText2: makeNodeComponent("inputText2"),
    frame2398: makeNodeComponent("frame2398"),
    passwordStrengthBar: makeNodeComponent("passwordStrengthBar"),
    rectangle140: makeNodeComponent("rectangle140"),
    rectangle141: makeNodeComponent("rectangle141"),
    rectangle142: makeNodeComponent("rectangle142"),
    rectangle143: makeNodeComponent("rectangle143"),
    frame2397: makeNodeComponent("frame2397"),
    inputText3: makeNodeComponent("inputText3"),
    inputWithLabel2: makeNodeComponent("inputWithLabel2"),
    inputText4: makeNodeComponent("inputText4"),
    basicInput2: makeNodeComponent("basicInput2"),
    inputText5: makeNodeComponent("inputText5"),
    frame2400: makeNodeComponent("frame2400"),
    passwordStrengthBar2: makeNodeComponent("passwordStrengthBar2"),
    rectangle144: makeNodeComponent("rectangle144"),
    rectangle145: makeNodeComponent("rectangle145"),
    rectangle146: makeNodeComponent("rectangle146"),
    rectangle147: makeNodeComponent("rectangle147"),
    frame2401: makeNodeComponent("frame2401"),
    inputText6: makeNodeComponent("inputText6"),
    inputWithLabel3: makeNodeComponent("inputWithLabel3"),
    inputText7: makeNodeComponent("inputText7"),
    dropdown: makeNodeComponent("dropdown"),
    inputText8: makeNodeComponent("inputText8"),
    frame2402: makeNodeComponent("frame2402"),
    passwordStrengthBar3: makeNodeComponent("passwordStrengthBar3"),
    rectangle148: makeNodeComponent("rectangle148"),
    rectangle149: makeNodeComponent("rectangle149"),
    rectangle150: makeNodeComponent("rectangle150"),
    rectangle151: makeNodeComponent("rectangle151"),
    frame2403: makeNodeComponent("frame2403"),
    inputText9: makeNodeComponent("inputText9"),
    inputWithLabel4: makeNodeComponent("inputWithLabel4"),
    inputText10: makeNodeComponent("inputText10"),
    textareaInput: makeNodeComponent("textareaInput"),
    inputText11: makeNodeComponent("inputText11"),
    frame2404: makeNodeComponent("frame2404"),
    passwordStrengthBar4: makeNodeComponent("passwordStrengthBar4"),
    rectangle152: makeNodeComponent("rectangle152"),
    rectangle153: makeNodeComponent("rectangle153"),
    rectangle154: makeNodeComponent("rectangle154"),
    rectangle155: makeNodeComponent("rectangle155"),
    frame2405: makeNodeComponent("frame2405"),
    inputText12: makeNodeComponent("inputText12"),
    frame2406: makeNodeComponent("frame2406"),
    button: makeNodeComponent("button"),
    section: makeNodeComponent("section"),
    upper2: makeNodeComponent("upper2"),
    addresses: makeNodeComponent("addresses"),
    nelspruit: makeNodeComponent("nelspruit"),
    nelspruit2: makeNodeComponent("nelspruit2"),
    headoffice: makeNodeComponent("headoffice"),
    headOfficeJhb: makeNodeComponent("headOfficeJhb"),
    polokwane: makeNodeComponent("polokwane"),
    polokwane2: makeNodeComponent("polokwane2"),
    pta: makeNodeComponent("pta"),
    pretoria: makeNodeComponent("pretoria"),
    // Metadata about props expected for PlasmicContact
    internalVariantProps: PlasmicContact__VariantProps,
    internalArgProps: PlasmicContact__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Contact Us",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicContact;
/* prettier-ignore-end */
